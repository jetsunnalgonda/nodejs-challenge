datasource db {
  // provider = "mysql"
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

model User {
  id             Int            @id @default(autoincrement())
  name           String
  email          String         @unique
  password       String
  bio            String?
  avatars        Avatar[]
  location       Location?      @relation(fields: [locationId], references: [id])
  locationId     Int?
  likesGiven     Like[]         @relation("LikesGiven")
  likesReceived  Like[]         @relation("LikesReceived")
  notifications  Notification[]
}

model Avatar {
  id        Int    @id @default(autoincrement())
  url       String
  userId    Int
  user      User   @relation(fields: [userId], references: [id])
}

model Location {
  id         Int     @id @default(autoincrement())
  latitude   Float
  longitude  Float
  placeName  String?
  user       User[]
}

model Like {
  id        Int      @id @default(autoincrement())
  likerId   Int
  likedId   Int
  createdAt DateTime @default(now())
  liker     User     @relation("LikesGiven", fields: [likerId], references: [id])
  liked     User     @relation("LikesReceived", fields: [likedId], references: [id])

  @@unique([likerId, likedId])
}

model Notification {
  id         Int      @id @default(autoincrement())
  userId     Int
  type       String
  message    String
  isRead     Boolean  @default(false)
  createdAt  DateTime @default(now())
  user       User     @relation(fields: [userId], references: [id])
}
